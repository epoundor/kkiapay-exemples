import { IData, ILibrary, ListenerData } from "./typings";
declare global {
    interface Window extends ILibrary {
    }
}
export declare const openKkiapayWidget: (configs: IData) => void;
export declare const closeKkiapayWidget: () => void;
export declare const addWidgetInitListener: (cb: () => void) => void;
export declare const addKkiapayCloseListener: (cb: () => void) => void;
export declare const addWidgetDestroyedListener: (cb: () => void) => void;
export declare const addPaymentInitListener: (cb: () => void) => void;
export declare const addPaymentAbortedListener: (cb: () => void) => void;
export declare const addFeedbackListener: (cb: () => void) => void;
export declare const addPendingListener: (cb: () => void) => void;
export declare const addFailedListener: (cb: (data: ListenerData) => void) => void;
export declare const addSuccessListener: (cb: (data: ListenerData) => void) => void;
export declare const addPaymentEndListener: (cb: () => void) => void;
export declare const onNetworkStateChanged: (cb: () => void) => void;
export declare const addKkiapayListener: (event: string, cb: (data: ListenerData) => void) => void;
export declare const removeKkiapayListener: (event: string) => void;
//# sourceMappingURL=main.d.ts.map